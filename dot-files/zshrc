#####################
export ZSH=~/.oh-my-zsh
ZSH_THEME=apple
#ZSH_THEME=af-magic
#ZSH_THEME=robbyrussell
COMPLETION_WAITING_DOTS=true
plugins=(
  git
  common-aliases
)

source $ZSH/oh-my-zsh.sh

###
# key binding
bindkey "\e\e[D" backward-word
bindkey "\e\e[C" forward-word
#####################

### ENV Variables ###
# export ANDROID_HOME=/usr/local/Caskroom/android-sdk/3859397/
export ANDROID_HOME=/Users/ml/Library/Android/sdk
export ANDROID_SDK_ROOT=$ANDROID_HOME

function join_by { local IFS="$1"; shift; echo "$*"; }

### PATHS ###
PATHS=(
  . # here and now
  ./vendor/bin # PHP Composer
  ./node_modules/.bin # JS NPM
  $HOME/.fastlane/bin # Fastlane
  ~/source/my/flutter # Dart Flutter
  ~/.pub-cache/bin # Dart Pub
  $ANDROID_HOME/platform-tools # Android platform Tools
  $ANDROID_HOME/tools # Android Tools
  $ANDROID_HOME/tools/bin # Android Tools
  /usr/local/opt/ruby/bin # ruby
  /usr/local/lib/ruby/gems/2.7.0/bin/  ## WORK AROUND FOR pod
  $HOME/.jenv/shims # Java JENV

  # Default
  /usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin # Default
)

export PATH=$(join_by : ${PATHS[*]})

### NVM - Node VM ###
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

##############
### Docker ###
alias d=docker
alias db='docker build'
alias de='docker exec'
alias deit='docker exec -it'
alias di='docker images'
alias dp='docker ps'
alias dpa='docker ps -a'
alias dr='docker run'
alias drm='docker rm'
alias drmi='docker rmi'
alias ds='docker stop'
alias dc=docker-compose
alias dcb='docker-compose build'
alias dcdn='docker-compose down'
alias dce='docker-compose exec'
alias dcl='docker-compose logs'
alias dclf='docker-compose logs -f'
alias dcps='docker-compose ps'
alias dcpull='docker-compose pull'
alias dcr='docker-compose run'
alias dcrestart='docker-compose restart'
alias dcrm='docker-compose rm'
alias dcstart='docker-compose start'
alias dcstop='docker-compose stop'
alias dcup='docker-compose up'
alias dcupd='docker-compose up -d'

##############
###  git   ###
alias gfx="git-fixup"
alias gfxa="git-fixup-all"
alias gc='git commit -s'
alias gca='git commit -sa'
alias gcam='git commit -sam'

alias start-docker='bash -c "clear && DOCKER_HOST=tcp://192.168.99.100:2376 DOCKER_CERT_PATH=~/.docker/machine/machines/default DOCKER_TLS_VERIFY=1 /bin/zsh"'
alias gbclean="git branch --merged master | grep -v \"\* master\" | xargs -n 1 git branch -d"

# ReactNative
alias shake='adb shell input keyevent 82'
alias android-log='adb logcat *:S AndroidRuntime:E ReactNative:V ReactNativeJS:V'
alias android-reload='adb shell input keyevent 46 & adb shell input keyevent 46'

alias system-cache-clear="\
  sudo kextcache -system-prelinked-kernel && \
  sudo kextcache -system-caches"

alias tf="tail -f $1 | sed 's/\\\n/^M^F/g'" ## ^M=[crtl+V ctrl+M] ^L=[crtl+V ctrl+L]
alias vboxshutdown="VBoxManage controlvm default poweroff"

alias vagrant-reload-force="sudo ls >> /dev/null; vagrant halt -f; vagrant up && vagrant ssh"

alias cat=bat

### Remove Bracket paste mode ###
# @see https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/issues/31
printf '\e[?2004l'
#printf '\e[?2004h'

# Set environment as UTF
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Set TTY for GPG (signing git commits)
export GPG_TTY=$(tty)

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

function kubectl-open-backend() {
  USAGE="  usage: $0 <namespace> <locale>"
  NAMESPACE="$1"
  LOCALE="$2"

  if [[ -z "$NAMESPACE" ]] || [[ -z "$LOCALE" ]]; then
    echo "Incorrect usage."
    echo "$USAGE"
    return 1
  fi

  case "$LOCALE" in
    "fr" ) PROJECT="travaux-com"  ;;
    "it" ) PROJECT="instapro-it"  ;;
    "nl" ) PROJECT="werkspot-nl"  ;;
    "en" | * )
      PROJECT="werkspot-com" ;;
  esac

  POD=$(kubectl get pods --namespace "$NAMESPACE" | grep "$PROJECT" | grep backend | awk "{ print(\$1) }")
  if [[ -z "$POD" ]];  then
    echo "Backend pod for $NAMESPACE not found"
    echo $USAGE
    return 1
  fi

  kubectl exec -ti --namespace "$NAMESPACE" --context instapro.staging -c "$PROJECT"-php-backend "$POD" /bin/bash
}
